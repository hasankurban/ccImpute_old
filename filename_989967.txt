
R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)


R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> if (!requireNamespace("BiocManager", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("BiocManager", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("BiocManager", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("BiocManager", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("BiocManager", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("BiocManager", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("BiocManager", quietly = TRUE))
> if (!requireNamespace("BiocManager", quietly = TRUE))
> if (!requireNamespace("BiocManager", quietly = TRUE))
+   install.packages("BiocManager")
+   install.packages("BiocManager")
+   install.packages("BiocManager")
> if (!requireNamespace("BiocManager", quietly = TRUE))
> if (!requireNamespace("BiocManager", quietly = TRUE))
+   install.packages("BiocManager")
+   install.packages("BiocManager")
> if (!requireNamespace("BiocManager", quietly = TRUE))
> if (!requireNamespace("BiocManager", quietly = TRUE))
> if (!requireNamespace("BiocManager", quietly = TRUE))
+   install.packages("BiocManager")
+   install.packages("BiocManager")
+   install.packages("BiocManager")
> if (!requireNamespace("BiocManager", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("BiocManager", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SC3", quietly = TRUE))
+   BiocManager::install("SC3")
> if (!requireNamespace("SC3", quietly = TRUE))
> if (!requireNamespace("SC3", quietly = TRUE))
+   BiocManager::install("SC3")
+   BiocManager::install("SC3")
> if (!requireNamespace("SC3", quietly = TRUE))
+   BiocManager::install("SC3")
> if (!requireNamespace("SC3", quietly = TRUE))
+   BiocManager::install("SC3")
> if (!requireNamespace("SC3", quietly = TRUE))
+   BiocManager::install("SC3")
> if (!requireNamespace("SC3", quietly = TRUE))
+   BiocManager::install("SC3")
> if (!requireNamespace("SC3", quietly = TRUE))
> if (!requireNamespace("SC3", quietly = TRUE))
+   BiocManager::install("SC3")
+   BiocManager::install("SC3")
> if (!requireNamespace("SC3", quietly = TRUE))
+   BiocManager::install("SC3")
> if (!requireNamespace("SC3", quietly = TRUE))
+   BiocManager::install("SC3")
> if (!requireNamespace("SC3", quietly = TRUE))
+   BiocManager::install("SC3")
> if (!requireNamespace("SC3", quietly = TRUE))
> if (!requireNamespace("SC3", quietly = TRUE))
+   BiocManager::install("SC3")
+   BiocManager::install("SC3")
> if (!requireNamespace("SC3", quietly = TRUE))
> if (!requireNamespace("SC3", quietly = TRUE))
+   BiocManager::install("SC3")
+   BiocManager::install("SC3")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
>   install.packages("./SC3", repos = NULL, type = "source")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
> if (!requireNamespace("mclust", quietly = TRUE))
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
+   install.packages("mclust")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
> if (!requireNamespace("Rtsne", quietly = TRUE))
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
+   install.packages("Rtsne")
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
make: Nothing to be done for `all'.
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("mclust", quietly = TRUE))
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("mclust", quietly = TRUE))
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
+   install.packages("BiocManager")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
+   install.packages("BiocManager")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("Rcpp", quietly = TRUE))
+   install.packages("Rcpp")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("mclust", quietly = TRUE))
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> 
> library(mclust)
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("Rcpp", quietly = TRUE))
+   install.packages("Rcpp")
+   install.packages("BiocManager")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
> if (!requireNamespace("Rcpp", quietly = TRUE))
+   install.packages("Rcpp")
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> 
> if (!requireNamespace("Rcpp", quietly = TRUE))
+   install.packages("Rcpp")
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> 
> library(mclust)
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("Rcpp", quietly = TRUE))
+   install.packages("Rcpp")
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> 
> library(mclust)
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("Rcpp", quietly = TRUE))
> library(mclust)
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> 
> library(mclust)
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
+   install.packages("Rcpp")
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> 
> library(mclust)
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
+   BiocManager::install("SummarizedExperiment")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("stats", quietly = TRUE))
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("mclust", quietly = TRUE))
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
+   install.packages("stats")
> if (!requireNamespace("Rcpp", quietly = TRUE))
+   install.packages("Rcpp")
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("Rcpp", quietly = TRUE))
+   install.packages("Rcpp")
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("Rcpp", quietly = TRUE))
+   install.packages("Rcpp")
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("Rcpp", quietly = TRUE))
+   install.packages("Rcpp")
> 
> library(mclust)
> if (!requireNamespace("Rcpp", quietly = TRUE))
+   install.packages("Rcpp")
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> 
> library(mclust)
> 
> library(mclust)
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> 
> library(mclust)
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("Rcpp", quietly = TRUE))
+   install.packages("Rcpp")
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("Rcpp", quietly = TRUE))
+   install.packages("Rcpp")
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("Rcpp", quietly = TRUE))
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> 
> library(mclust)
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
> 
> library(mclust)
> 
> library(mclust)
+   install.packages("Rcpp")
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> 
> library(mclust)
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("Rcpp", quietly = TRUE))
+   install.packages("Rcpp")
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> 
> library(mclust)
> library(Rtsne)
> library(Rtsne)
> library(Rtsne)
> library(Rtsne)
> library(Rtsne)
> library(Rtsne)
> library(Rtsne)
> library(Rtsne)
> library(Rtsne)
> library(Rtsne)
> library(Rtsne)
> library(Rtsne)
> library(Rtsne)
> library(Rtsne)
> library(Rtsne)
> library(SummarizedExperiment)
> library(SummarizedExperiment)
> library(SummarizedExperiment)
> library(SummarizedExperiment)
> library(SummarizedExperiment)
> library(SummarizedExperiment)
> library(SummarizedExperiment)
> library(SummarizedExperiment)
> library(SummarizedExperiment)
> library(SummarizedExperiment)
> library(SummarizedExperiment)
> library(SummarizedExperiment)
> library(SummarizedExperiment)
> library(SummarizedExperiment)
> library(SummarizedExperiment)
> library(SC3)
> library(SC3)
> library(SC3)
> library(SC3)
> library(SC3)
> library(SC3)
> library(SC3)
> library(SC3)
> library(SC3)
> library(SC3)
> library(SC3)
> library(SC3)
> library(SC3)
> library(SC3)
> library(SC3)
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("mclust")
> if (!requireNamespace("Rtsne", quietly = TRUE))
+   install.packages("Rtsne")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("mclust", quietly = TRUE))
+   install.packages("BiocManager")
> if (!requireNamespace("SummarizedExperiment", quietly = TRUE))
+   BiocManager::install("SummarizedExperiment")
> if (!requireNamespace("SingleCellExperiment", quietly = TRUE))
+   BiocManager::install("SingleCellExperiment")
> if (!requireNamespace("stats", quietly = TRUE))
+   install.packages("stats")
> if (!requireNamespace("Rcpp", quietly = TRUE))
+   install.packages("Rcpp")
> if (!requireNamespace("cluster", quietly = TRUE))
+   install.packages("cluster")
> 
> library(mclust)
> library(Rtsne)
> library(SummarizedExperiment)
> library(SC3)
> library(SingleCellExperiment)
> # library(rlist)
> library(stats)
> library(Rcpp)
> library(cluster)
> sourceCpp("./cpp/wCorr_m.cpp")
> sourceCpp("./cpp/solver.cpp")
> 
> #Compute ARI for each possibility
> eval_alg <- function(X, X_log, labels, num_clusters,threshold) {
+   start_time <- Sys.time()
+   distances <- list()
+   names <- c()
+   names <- c(names, "Spearman")
+   distances <-list(w_cor_dist_m(X_log, rowVars(X_log)))
+   names(distances) <- names
+ 
+   sce <- SingleCellExperiment(
+     assays = list(
+       counts = as.matrix(X),
+       logcounts = X_log
+     ),
+     colData = labels
+   )
+   rowData(sce)$feature_symbol <- rownames(sce)
+   sce <- sc3_prepare(sce, gene_filter = FALSE)
+ 
+   metadata(sce)$sc3$distances <- distances
+   sce <- sc3_calc_transfs(sce)
+   sce <- sc3_kmeans(sce, num_clusters, TRUE)
+   sce <- sc3_calc_consens(sce)
+ 
+   # Get consensus matrix from the SC3
+   cm <- eval(parse(text=paste("metadata(sce)$sc3$consensus$'", toString(num_clusters), "'$consensus", sep="")))
+ 
+   # Remove diagonal entries
+   cm <- cm - diag(nrow(cm))
+ 
+   cm[cm < threshold] <- 0
+   cm2 <- t(apply((cm), 2,  # Normalize the entries to get weighted average
+                  function(i) i/sum(i)))
+ 
+   # Replace NA values with 0
+   cm2[is.na(cm2)] <- 0
+ 
+   xlog_t = t(X_log)
+   x_imp <- xlog_t
+   # print(c(nrow(x_imp),ncol(x_imp)))
+ 
+   t2 = x_imp == 0
+   x_t_vote <- x_imp
+ 
+   x_t_vote[t2] <- -1
+   x_t_vote[x_imp > 0] <- 1
+ 
+   #compute votes - majority wins - negative means an actual 0, otherwise it is some positive value
+   votes <- matrix(0L, nrow = nrow(x_imp), ncol = ncol(x_imp))
+   votes[t2] <- (cm2 %*% x_t_vote)[t2]
+ 
+   t3 <- votes > 0
+   x_imp <- solve_dropouts(cm2, x_imp, which(t3, arr.ind = TRUE))
+ 
+   end_time <- Sys.time()
+ 
+   print("Imputation finished")
+   xlog_t[t3] <- x_imp[t3]
+ 
+   p <- 30
+ 
+   if (ncol(t(as.matrix(xlog_t))) <= p*2){
+     p <- 9
+   }
+ 
+   cells <- ncol(X)
+   if(cells > 1000){
+     print("Reducing rank")
+     pca_red <- prcomp(as.matrix(xlog_t), rank. = 500)$x
+     tsne_red <- Rtsne(pca_red, perplexity = p, check_duplicates = FALSE)$Y
+     restarts <- 50
+ 
+   }
+   else{
+     pca_red <- prcomp(as.matrix(xlog_t))$x
+     tsne_red <- Rtsne(as.matrix(xlog_t), perplexity = p, check_duplicates = FALSE)$Y
+     restarts <- 1000
+   }
+ 
+   c1 = adjustedRandIndex(kmeans(
+     pca_red,
+     centers = num_clusters,
+     iter.max = 1e+09,
+     nstart = restarts
+   )$cluster,
+   labels)
+ 
+   print("PCA kmeans finished")
+ 
+ 
+ 
+   #tsne/kmeans
+   c2 = adjustedRandIndex(kmeans(
+     tsne_red,
+     centers = num_clusters,
+     iter.max = 1e+09,
+     nstart = restarts
+   )$cluster,
+   labels)
+   print("tsne kmeans finished")
+ 
+ 
+   c0 = adjustedRandIndex(eval(parse(text=paste("colData(sce)$sc3", toString(num_clusters), "clusters", sep="_"))),
+                          labels)
+ 
+ 
+   prop_zeros_removed <- 1.00-(sum(xlog_t==0))/sum(X_log==0)
+ 
+   pca_dist <- as.matrix(stats::dist(pca_red, method = "euclidean", diag = TRUE, upper = TRUE))
+ 
+   int_labels <- as.numeric((as.factor(labels)))
+ 
+   silh_pca <- silhouette(int_labels, pca_dist)
+   silh_pca_avr <- as.numeric(summary(silh_pca)['avg.width'])
+ 
+   return(c(c0, c1, c2, difftime(end_time, start_time, units="secs") , prop_zeros_removed, silh_pca_avr, threshold))
+ }
> 
> 
> driver <- function(filename, repeats, threshold){
+   dataset_names <- list("blakeley")
+   # dataset_names <-list("blakeley", "deng", "pollen","darmanis", "segerstolpe")
+   
+   
+   
+   for(i in 1:length(dataset_names)){
+     dataset = dataset_names[[i]]
+     sce <- readRDS(file = paste("./datasets/", dataset, ".rds", sep=""))
+     
+     X <- assays(sce)$counts
+     X_log <- assays(sce)$logcounts
+     
+     print(paste(dataset, "Genes(rows):", nrow(X), "Cells(cols):", ncol(X), sep=" "))
+     
+     # colnames(X) <- colnames(X, do.NULL = FALSE, prefix = "col")
+     labels<-if(is.null(colData(sce)$cell_type2)) colData(sce)$cell_type1 else colData(sce)$cell_type2
+     row_sums <- rowSums(X[,-1])
+     X <- X[row_sums>0,] # remove genes that are not expressed at all
+     X_log <- X_log[row_sums>0,] # remove genes that are not expressed at all
+     
+     num_clusters = length(unique(labels))
+     
+     data_aris <- replicate(repeats, eval_alg(X, X_log, labels, num_clusters,threshold))
+     
+     means <- rowMeans(data_aris)
+     stdevs <- rowSds(data_aris)
+     
+     print(c("Clustering results: ", dataset))
+     print(means)
+     print(stdevs)
+     fileConn<-eval(parse(text=paste('file("./results/', "ccimpute_", dataset, '_', filename, '_', repeats, '_', threshold, 'txt")', sep="")))
+     writeLines(c(paste(dataset, "Genes(rows):", nrow(X), "Cells(cols):", ncol(X), "clusters: ", num_clusters, sep=" "), means, stdevs), fileConn)
+     close(fileConn)
+   }
+   print(sum)
+ }
> 
> # driver("slow-65", 1, .50)
> # driver("slow-65", 1, .55)
> # driver("slow-65", 1, .60)
> driver("fast-95", 1, .95)
[1] "blakeley Genes(rows): 16862 Cells(cols): 30"
starting worker pid=57624 on localhost:11555 at 21:53:20.868
starting worker pid=57666 on localhost:11555 at 21:53:32.895
starting worker pid=57652 on localhost:11555 at 21:53:32.940
starting worker pid=57657 on localhost:11555 at 21:53:32.941
starting worker pid=57662 on localhost:11555 at 21:53:32.952
starting worker pid=57659 on localhost:11555 at 21:53:32.952
starting worker pid=57649 on localhost:11555 at 21:53:32.854
starting worker pid=57647 on localhost:11555 at 21:53:32.858
starting worker pid=57653 on localhost:11555 at 21:53:32.862
starting worker pid=57644 on localhost:11555 at 21:53:32.958
starting worker pid=57663 on localhost:11555 at 21:53:32.966
starting worker pid=57650 on localhost:11555 at 21:53:32.977
starting worker pid=57645 on localhost:11555 at 21:53:32.988
starting worker pid=57664 on localhost:11555 at 21:53:32.895
starting worker pid=57661 on localhost:11555 at 21:53:32.992
starting worker pid=57665 on localhost:11555 at 21:53:32.994
starting worker pid=57655 on localhost:11555 at 21:53:32.922
starting worker pid=57646 on localhost:11555 at 21:53:32.918
starting worker pid=57654 on localhost:11555 at 21:53:32.910
starting worker pid=57656 on localhost:11555 at 21:53:32.914
starting worker pid=57658 on localhost:11555 at 21:53:33.003
starting worker pid=57648 on localhost:11555 at 21:53:32.930
starting worker pid=57651 on localhost:11555 at 21:53:32.948
starting worker pid=57660 on localhost:11555 at 21:53:33.048
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%